generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  subscriptions Subscription[]
  reports       Report[]

  @@map("users")
}

model Subscription {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  location  String
  alertType String   @map("alert_type")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Alert {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String
  severity    String
  location    String
  latitude    Float?
  longitude   Float?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("alerts")
}

model Report {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String
  location    String
  latitude    Float?
  longitude   Float?
  imageUrl    String?  @map("image_url")
  userId      String   @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("reports")
}

model ClimateData {
  id          String   @id @default(cuid())
  location    String
  temperature Float
  humidity    Float
  windSpeed   Float    @map("wind_speed")
  airQuality  Int?     @map("air_quality")
  timestamp   DateTime @default(now())

  @@map("climate_data")
}

